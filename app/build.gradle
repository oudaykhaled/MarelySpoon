apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: rootProject.file('dependencies.gradle')

//Application config
def appVersionCode = 10 // Version code must be 2 chars
def databaseVersion = 1


//Extracting version name from version code
def appVersionName = "$appVersionCode".toCharArray()[0].toString()
                        .concat(".")
                        .concat("$appVersionCode".toCharArray()[1].toString())

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.ouday.marelyspoon"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "int", "appVersionCode", appVersionCode.toString()
        buildConfigField "String", "appVersionName", "\"$appVersionName\""
        buildConfigField "int", "databaseVersion", databaseVersion.toString()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation libraries.junit
    testImplementation libraries.coreTest
    testImplementation libraries.mockitoCore
    androidTestImplementation libraries.mockito
    androidTestImplementation libraries.testRules

    androidTestImplementation libraries.extJunit
    androidTestImplementation libraries.testRunner
    androidTestImplementation libraries.espressoCore
    androidTestImplementation libraries.espressoContrib
    testImplementation libraries.coroutinesTest


    implementation libraries.kotlin
    implementation libraries.coroutinesCore
    implementation libraries.coroutinesAndroid
    implementation libraries.core
    implementation libraries.coreKtx
    implementation libraries.retrofit
    implementation libraries.retrofitConverter
    implementation libraries.gson
    implementation libraries.retrofitAdapter
    implementation libraries.jakewhartonAdapter
    implementation libraries.espressoIntents
    implementation libraries.roomTest
    implementation libraries.dexter
    implementation libraries.navFragment
    implementation libraries.navFragmentKtx
    implementation libraries.workmanager
    implementation libraries.navUI
    implementation libraries.navUIKtx
    implementation libraries.viewPager2
    implementation libraries.lifecycleextensions
    kapt libraries.lifecycleCompiler
    implementation libraries.lifecycleViewmodel
    implementation libraries.lifecycleFragment
    implementation libraries.liveData
    implementation libraries.kotlinCoroutinesAdapter

    implementation libraries.rxAndroid
    implementation libraries.rxJava
    implementation libraries.rxBindingAppCompat
    implementation libraries.okhttp
    implementation libraries.okhttpLogger
    implementation libraries.room
    implementation libraries.roomKtx
    kapt libraries.roomCompiler
    implementation libraries.fragmentsKtx
    implementation libraries.material

    implementation libraries.imageLoader


    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'


    /* Retrofit using RxJava2, Okhttp, Okhttp logging interceptor, Gson  */
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    testImplementation "android.arch.core:core-testing:1.1.0"


    /* Picasso lib for image loading  */
    implementation 'com.squareup.picasso:picasso:2.71828'

    /* Android Architecture Component - ConstraintLayout  */
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:+'

    /* Android Architecture Component - LiveData & ViewModel  */
    implementation 'android.arch.lifecycle:extensions:1.1.1'

    /* Android Architecture Component - Room Persistance Lib  */
    implementation 'android.arch.persistence.room:runtime:1.1.1'
    implementation 'android.arch.persistence.room:rxjava2:1.1.1'
    kapt 'android.arch.persistence.room:compiler:1.1.1'

    /* Dagger2 - We are going to use dagger.android which includes
     * support for Activity and fragment injection so we need to include
     * the following dependencies */
    implementation 'com.google.dagger:dagger-android:2.17'
    implementation 'com.google.dagger:dagger-android-support:2.17'
    kapt 'com.google.dagger:dagger-android-processor:2.17'

    /* Dagger2 - default dependency */
    kapt 'com.google.dagger:dagger-compiler:2.17'

    /* Add Kotlin support */
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.2.71'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    testImplementation libraries.mockitoCore
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.3.0'
    testImplementation "androidx.arch.core:core-testing:2.0.1"

    implementation "com.google.android.material:material:1.1.0-alpha07"

    implementation 'com.contentful.java:java-sdk:9.0.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

}
